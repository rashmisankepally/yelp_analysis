{"cells":[{"cell_type":"markdown","metadata":{},"source":["# Looking at Yelp data loaded from Google Cloud Bucket"]},{"cell_type":"code","execution_count":29,"metadata":{},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","import os\n","import json"]},{"cell_type":"code","execution_count":1,"metadata":{},"outputs":[],"source":["PROJECT = 'bigdata-273220'\n","BUCKET = 'comparebusiness'"]},{"cell_type":"code","execution_count":2,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Updated property [core/project].\n","\u001B[1;33mWARNING:\u001B[0m You do not appear to have access to project [bigdata-273220] or it does not exist.\n"]}],"source":["!gcloud config set project {PROJECT}"]},{"cell_type":"code","execution_count":32,"metadata":{},"outputs":[],"source":["from google.cloud import storage\n","client = storage.Client()\n","bucket = client.get_bucket('comparebusiness')\n","blob = storage.Blob('yelp-dataset/yelp_academic_dataset_business.json', bucket)\n","content = blob.download_as_string()\n","#data = json.load(blob)"]},{"cell_type":"code","execution_count":20,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Copying gs://comparebusiness/yelp-dataset/yelp_academic_dataset_business.json...\n","\\ [1 files][145.8 MiB/145.8 MiB]                                                \n","Operation completed over 1 objects/145.8 MiB.                                    \n"]}],"source":["!gsutil cp gs://comparebusiness/yelp-dataset/yelp_academic_dataset_business.json yelp_academic_dataset_business.json\n"]},{"cell_type":"code","execution_count":2,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["{'business_id': 'f9NumwFMBDn751xgFiRbNA', 'name': 'The Range At Lake Norman', 'address': '10913 Bailey Rd', 'city': 'Cornelius', 'state': 'NC', 'postal_code': '28031', 'latitude': 35.4627242, 'longitude': -80.8526119, 'stars': 3.5, 'review_count': 36, 'is_open': 1, 'attributes': {'BusinessAcceptsCreditCards': 'True', 'BikeParking': 'True', 'GoodForKids': 'False', 'BusinessParking': \"{'garage': False, 'street': False, 'validated': False, 'lot': True, 'valet': False}\", 'ByAppointmentOnly': 'False', 'RestaurantsPriceRange2': '3'}, 'categories': 'Active Life, Gun/Rifle Ranges, Guns & Ammo, Shopping', 'hours': {'Monday': '10:0-18:0', 'Tuesday': '11:0-20:0', 'Wednesday': '10:0-18:0', 'Thursday': '11:0-20:0', 'Friday': '11:0-20:0', 'Saturday': '11:0-20:0', 'Sunday': '13:0-18:0'}}\n"]}],"source":["import json\n","for line in open('yelp_academic_dataset_business.json'):\n","    print(json.loads(line))\n","    break"]},{"cell_type":"markdown","metadata":{},"source":["Don't run below unless you need to."]},{"cell_type":"code","execution_count":36,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Copying gs://comparebusiness/yelp-dataset/yelp_academic_dataset_review.json...\n","Resuming download for review.json component 1                                   \n","Resuming download for review.json component 0\n","Resuming download for review.json component 2\n","Resuming download for review.json component 3\n","\\ [1 files][  5.9 GiB/  5.9 GiB]   61.7 MiB/s                                   \n","Operation completed over 1 objects/5.9 GiB.                                      \n"]}],"source":["!gsutil cp gs://comparebusiness/yelp-dataset/yelp_academic_dataset_review.json review.json"]},{"cell_type":"code","execution_count":4,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["As someone who has worked with many museums, I was eager to visit this gallery on my most recent trip to Las Vegas. When I saw they would be showing infamous eggs of the House of Faberge from the Virginia Museum of Fine Arts (VMFA), I knew I had to go!\n","\n","Tucked away near the gelateria and the garden, the Gallery is pretty much hidden from view. It's what real estate agents would call \"cozy\" or \"charming\" - basically any euphemism for small.\n","\n","That being said, you can still see wonderful art at a gallery of any size, so why the two *s you ask? Let me tell you:\n","\n","* pricing for this, while relatively inexpensive for a Las Vegas attraction, is completely over the top. For the space and the amount of art you can fit in there, it is a bit much.\n","* it's not kid friendly at all. Seriously, don't bring them.\n","* the security is not trained properly for the show. When the curating and design teams collaborate for exhibitions, there is a definite flow. That means visitors should view the art in a certain sequence, whether it be by historical period or cultural significance (this is how audio guides are usually developed). When I arrived in the gallery I could not tell where to start, and security was certainly not helpful. I was told to \"just look around\" and \"do whatever.\" \n","\n","At such a *fine* institution, I find the lack of knowledge and respect for the art appalling.\n"]}],"source":["for line in open('review.json'):\n","    review = json.loads(line)\n","    print(review['text'])\n","    break"]},{"cell_type":"markdown","metadata":{},"source":["# Installing some packages and exploring their usage"]},{"cell_type":"code","execution_count":41,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting vaderSentiment\n","\u001B[?25l  Downloading https://files.pythonhosted.org/packages/44/a3/1218a3b5651dbcba1699101c84e5c84c36cbba360d9dbf29f2ff18482982/vaderSentiment-3.3.1-py2.py3-none-any.whl (125kB)\n","\u001B[K     |████████████████████████████████| 133kB 3.1MB/s eta 0:00:01\n","\u001B[?25hInstalling collected packages: vaderSentiment\n","Successfully installed vaderSentiment-3.3.1\n","Note: you may need to restart the kernel to use updated packages.\n"]}],"source":["pip install vaderSentiment"]},{"cell_type":"code","execution_count":5,"metadata":{},"outputs":[],"source":["from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n","analyser = SentimentIntensityAnalyzer()"]},{"cell_type":"code","execution_count":6,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["As someone who has worked with many museums, I was eager to visit this gallery on my most recent trip to Las Vegas. When I saw they would be showing infamous eggs of the House of Faberge from the Virginia Museum of Fine Arts (VMFA), I knew I had to go!\n","\n","Tucked away near the gelateria and the garden, the Gallery is pretty much hidden from view. It's what real estate agents would call \"cozy\" or \"charming\" - basically any euphemism for small.\n","\n","That being said, you can still see wonderful art at a gallery of any size, so why the two *s you ask? Let me tell you:\n","\n","* pricing for this, while relatively inexpensive for a Las Vegas attraction, is completely over the top. For the space and the amount of art you can fit in there, it is a bit much.\n","* it's not kid friendly at all. Seriously, don't bring them.\n","* the security is not trained properly for the show. When the curating and design teams collaborate for exhibitions, there is a definite flow. That means visitors should view the art in a certain sequence, whether it be by historical period or cultural significance (this is how audio guides are usually developed). When I arrived in the gallery I could not tell where to start, and security was certainly not helpful. I was told to \"just look around\" and \"do whatever.\" \n","\n","At such a *fine* institution, I find the lack of knowledge and respect for the art appalling.\n","{'neg': 0.032, 'neu': 0.82, 'pos': 0.148, 'compound': 0.9823}\n"]}],"source":["for line in open('review.json'):\n","    review = json.loads(line)\n","    print(review['text'])\n","    print(str(analyser.polarity_scores(line)))\n","    break"]},{"cell_type":"code","execution_count":46,"metadata":{},"outputs":[],"source":["import nltk\n","nltk.download('all')"]},{"cell_type":"code","execution_count":11,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: spacy in /opt/conda/anaconda/lib/python3.7/site-packages (2.2.4)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (0.6.0)\n","Requirement already satisfied: setuptools in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (41.4.0)\n","Requirement already satisfied: thinc==7.4.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (7.4.0)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (1.1.3)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (1.0.0)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (0.4.1)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (1.0.2)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (4.42.0)\n","Requirement already satisfied: numpy>=1.15.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (1.17.2)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (2.22.0)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (1.0.2)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (3.0.2)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /opt/conda/anaconda/lib/python3.7/site-packages (from spacy) (2.0.3)\n","Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /opt/conda/anaconda/lib/python3.7/site-packages (from catalogue<1.1.0,>=0.0.7->spacy) (0.23)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /opt/conda/anaconda/lib/python3.7/site-packages (from requests<3.0.0,>=2.13.0->spacy) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /opt/conda/anaconda/lib/python3.7/site-packages (from requests<3.0.0,>=2.13.0->spacy) (1.24.2)\n","Requirement already satisfied: idna<2.9,>=2.5 in /opt/conda/anaconda/lib/python3.7/site-packages (from requests<3.0.0,>=2.13.0->spacy) (2.8)\n","Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/anaconda/lib/python3.7/site-packages (from requests<3.0.0,>=2.13.0->spacy) (2019.9.11)\n","Requirement already satisfied: zipp>=0.5 in /opt/conda/anaconda/lib/python3.7/site-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy) (0.6.0)\n","Requirement already satisfied: more-itertools in /opt/conda/anaconda/lib/python3.7/site-packages (from zipp>=0.5->importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy) (7.2.0)\n","Note: you may need to restart the kernel to use updated packages.\n"]}],"source":["pip install spacy"]},{"cell_type":"code","execution_count":7,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Mark and John are sincere employees at Google.\n","None\n","None\n","SCONJ\n","PRON\n","PRON\n","AUX\n","VERB\n","ADP\n","ADJ\n","NOUN\n","PUNCT\n","PRON\n","AUX\n","ADJ\n","PART\n","VERB\n","DET\n","NOUN\n","ADP\n","DET\n","ADV\n","ADJ\n","NOUN\n","ADP\n","PROPN\n","PROPN\n","PUNCT\n","ADV\n","PRON\n","VERB\n","PRON\n","VERB\n","AUX\n","VERB\n","ADJ\n","NOUN\n","ADP\n","DET\n","PROPN\n","ADP\n","PROPN\n","ADP\n","DET\n","PROPN\n","PROPN\n","ADP\n","PROPN\n","PROPN\n","PUNCT\n","PROPN\n","PUNCT\n","PUNCT\n","PRON\n","VERB\n","PRON\n","AUX\n","PART\n","VERB\n","PUNCT\n","SPACE\n","VERB\n","ADV\n","SCONJ\n","DET\n","NOUN\n","CCONJ\n","DET\n","NOUN\n","PUNCT\n","DET\n","PROPN\n","AUX\n","ADV\n","ADV\n","VERB\n","ADP\n","NOUN\n","PUNCT\n","PRON\n","AUX\n","PRON\n","ADJ\n","NOUN\n","NOUN\n","VERB\n","VERB\n","PUNCT\n","ADJ\n","PUNCT\n","CCONJ\n","PUNCT\n","ADJ\n","PUNCT\n","PUNCT\n","ADV\n","DET\n","NOUN\n","ADP\n","ADJ\n","PUNCT\n","SPACE\n","DET\n","AUX\n","VERB\n","PUNCT\n","PRON\n","VERB\n","ADV\n","VERB\n","ADJ\n","NOUN\n","ADP\n","DET\n","NOUN\n","ADP\n","DET\n","NOUN\n","PUNCT\n","CCONJ\n","ADV\n","DET\n","NUM\n","PUNCT\n","NOUN\n","PRON\n","VERB\n","PUNCT\n","VERB\n","PRON\n","VERB\n","PRON\n","PUNCT\n","SPACE\n","PUNCT\n","VERB\n","ADP\n","DET\n","PUNCT\n","SCONJ\n","ADV\n","ADJ\n","ADP\n","DET\n","PROPN\n","PROPN\n","NOUN\n","PUNCT\n","AUX\n","ADV\n","ADP\n","DET\n","NOUN\n","PUNCT\n","ADP\n","DET\n","NOUN\n","CCONJ\n","DET\n","NOUN\n","ADP\n","NOUN\n","PRON\n","VERB\n","VERB\n","ADV\n","ADV\n","PUNCT\n","PRON\n","AUX\n","DET\n","NOUN\n","ADJ\n","PUNCT\n","SPACE\n","PUNCT\n","PRON\n","AUX\n","PART\n","NOUN\n","ADJ\n","ADV\n","ADV\n","PUNCT\n","ADV\n","PUNCT\n","AUX\n","PART\n","VERB\n","PRON\n","PUNCT\n","SPACE\n","PUNCT\n","DET\n","NOUN\n","AUX\n","PART\n","VERB\n","ADV\n","ADP\n","DET\n","NOUN\n","PUNCT\n","ADV\n","DET\n","NOUN\n","CCONJ\n","NOUN\n","NOUN\n","VERB\n","ADP\n","NOUN\n","PUNCT\n","PRON\n","AUX\n","DET\n","ADJ\n","NOUN\n","PUNCT\n","DET\n","VERB\n","NOUN\n","VERB\n","VERB\n","DET\n","NOUN\n","ADP\n","DET\n","ADJ\n","NOUN\n","PUNCT\n","SCONJ\n","PRON\n","AUX\n","ADP\n","ADJ\n","NOUN\n","CCONJ\n","ADJ\n","NOUN\n","PUNCT\n","DET\n","AUX\n","ADV\n","ADJ\n","NOUN\n","AUX\n","ADV\n","VERB\n","PUNCT\n","PUNCT\n","ADV\n","PRON\n","VERB\n","ADP\n","DET\n","NOUN\n","PRON\n","VERB\n","PART\n","VERB\n","ADV\n","PART\n","VERB\n","PUNCT\n","CCONJ\n","NOUN\n","AUX\n","ADV\n","PART\n","ADJ\n","PUNCT\n","PRON\n","AUX\n","VERB\n","PART\n","PUNCT\n","ADV\n","VERB\n","ADV\n","PUNCT\n","CCONJ\n","PUNCT\n","AUX\n","DET\n","PUNCT\n","PUNCT\n","SPACE\n","ADP\n","DET\n","DET\n","PUNCT\n","ADJ\n","PUNCT\n","NOUN\n","PUNCT\n","PRON\n","VERB\n","DET\n","NOUN\n","ADP\n","NOUN\n","CCONJ\n","NOUN\n","ADP\n","DET\n","NOUN\n","NOUN\n","PUNCT\n"]}],"source":["import spacy\n","nlp = spacy.load('en_core_web_sm')\n","doc = nlp(u'Mark and John are sincere employees at Google.')\n","noun_adj_pairs = []\n","print(doc)\n","for i,token in enumerate(doc):\n","    if token.pos_ not in ('NOUN','PROPN'):\n","        continue\n","    for j in range(i+1,len(doc)):\n","        if doc[j].pos_ == 'ADJ':\n","            print(noun_adj_pairs.append((token,doc[j])))\n","            break\n","for line in open('review.json'):\n","    review = json.loads(line)\n","    nlp_line = nlp(review['text'])\n","    for i, token in enumerate(nlp_line):\n","        print(token.pos_)\n","        if token.pos_ not in ('NOUN', 'PROPN'):\n","            continue\n","        for j in range(i+1, len(doc)):\n","            if doc[j].pos_ == 'ADJ':\n","                print(noun_adj_pairs.append((token, doc[j])))\n","                break\n","    #tokens = nltk.word_tokenize(review['text'])\n","    #print(nltk.pos_tag(tokens))\n","    break"]},{"cell_type":"code","execution_count":12,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Copying file://business.json [Content-Type=application/json]...\n","- [1 files][ 41.4 MiB/ 41.4 MiB]                                                \n","Operation completed over 1 objects/41.4 MiB.                                     \n"]}],"source":["import json\n","newdict = {}\n","outfile = open('business.json', 'w')\n","for line in open('yelp_academic_dataset_business.json'):\n","    original = json.loads(line)\n","    newdict['business_id'] = original['business_id']\n","    newdict['name'] = original['name']\n","    newdict['city'] = original['city']\n","    newdict['state'] = original['state']\n","    newdict['postal_code'] = original['postal_code']\n","    newdict['categories'] = original['categories']\n","    json.dump(newdict, outfile)\n","    outfile.write('\\n')\n","outfile.close()\n","\n","!gsutil cp business.json gs://comparebusiness/yelp-dataset/business.json\n","    "]},{"cell_type":"markdown","metadata":{},"source":["# Filtering for Restaurants"]},{"cell_type":"code","execution_count":23,"metadata":{},"outputs":[],"source":["restaurants_file = open('restaurants.json', 'w')\n","for line in open('business.json'):\n","    business = json.loads(line)\n","    if business['categories'] is None: continue\n","    if \"Restaurants\" in business['categories']:\n","        json.dump(line, restaurants_file)\n","        restaurants_file.write('\\n')\n","restaurants_file.close()"]},{"cell_type":"code","execution_count":24,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Copying file://restaurants.json [Content-Type=application/json]...\n","/ [1 files][ 13.8 MiB/ 13.8 MiB]                                                \n","Operation completed over 1 objects/13.8 MiB.                                     \n"]}],"source":["!gsutil cp restaurants.json gs://comparebusiness/yelp-dataset/restaurants.json"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"nbformat":4,"nbformat_minor":4}